apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    tags.datadoghq.com/env: staging
    tags.datadoghq.com/service: n8n-platform
    tags.datadoghq.com/version: {{ .Chart.AppVersion | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.replicaStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
        component: api
        tags.datadoghq.com/env: staging
        tags.datadoghq.com/service: n8n-platform
        tags.datadoghq.com/version: {{ .Chart.AppVersion | quote }}
      annotations:
        timestamp: "{{ now | date "20060102150405" }}"
    spec:
      imagePullSecrets:
        - name: {{ include "n8n.fullname" . }}-ecr
      serviceAccountName: {{ include "n8n.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-postgres
          image: busybox:latest
          command:
            - sh
            - -c
            - |
              until nc -z {{ include "n8n.fullname" . }}-postgres 5432; do
                echo "Waiting for PostgreSQL..."
                sleep 2
              done
              echo "PostgreSQL is ready!"
      containers:
        - name: {{ .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          env:
            # Datadog APM
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']

            # Database configuration
            - name: DB_TYPE
              value: postgresdb
            - name: DB_POSTGRESDB_HOST
              value: {{ include "n8n.fullname" . }}-postgres
            - name: DB_POSTGRESDB_PORT
              value: "5432"
            - name: DB_POSTGRESDB_DATABASE
              value: {{ .Values.postgres.database }}
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: postgresUser
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: postgresPassword

            # n8n configuration
            - name: N8N_PROTOCOL
              value: {{ .Values.n8n.protocol }}
            - name: N8N_HOST
              value: {{ .Values.n8n.host }}
            - name: N8N_PORT
              value: {{ .Values.service.internalPort | quote }}
            - name: WEBHOOK_URL
              value: {{ .Values.n8n.webhookUrl }}
            - name: GENERIC_TIMEZONE
              value: {{ .Values.n8n.timezone }}

            # Basic authentication
            - name: N8N_BASIC_AUTH_ACTIVE
              value: {{ .Values.n8n.basicAuth.enabled | quote }}
            - name: N8N_BASIC_AUTH_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: n8nBasicAuthUser
            - name: N8N_BASIC_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: n8nBasicAuthPassword

            # Encryption
            - name: N8N_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: n8nEncryptionKey

            # Execution data
            - name: EXECUTIONS_DATA_PRUNE
              value: {{ .Values.n8n.executionsPrune | quote }}
            - name: EXECUTIONS_DATA_MAX_AGE
              value: {{ .Values.n8n.executionsMaxAge | quote }}

            # Pod information
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n
            - name: dsdsocket
              mountPath: /var/run/datadog

      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: {{ include "n8n.fullname" . }}-data
        - name: dsdsocket
          hostPath:
            path: /var/run/datadog/

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "n8n.fullname" . }}-data
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2-csi
  resources:
    requests:
      storage: 5Gi
